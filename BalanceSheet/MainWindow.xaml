<Controls:MetroWindow x:Class="BalanceSheet.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BalanceSheet"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:base="clr-namespace:BalanceSheet.DataBaseUsingEF"
        xmlns:c="clr-namespace:ScottLogic.Controls.PieChart"
        xmlns:b="clr-namespace:ScottLogic.Shapes"
        xmlns:Custom="http://metro.mahapps.com/winfx/xaml/shared" 
        mc:Ignorable="d"
        Title="Balance Sheet" WindowStartupLocation="CenterScreen" 
        Icon="{Binding Source=Images/icon.ico}"
        Foreground="Black" Background="WhiteSmoke"
        Height="700" Width="1010" EnableDWMDropShadow="False"
 Loaded="Window_Loaded" ResizeMode="CanMinimize" Closing="MetroWindow_Closing" WindowStyle="ThreeDBorderWindow" >
    <Controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Icons.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>
            <Ellipse x:Key="AppThemeMenuIcon"                  
                     x:Shared="False" 
                      Width="16" 
                      Height="16" 
                      StrokeThickness="1" 
                      Stroke="{Binding BorderColorBrush, Mode=OneWay}" 
                      Fill="{Binding ColorBrush, Mode=OneWay}" />
            <Ellipse x:Key="AccentMenuIcon" 
                      x:Shared="False" 
                      Width="16" 
                      Height="16" 
                      Fill="{Binding ColorBrush, Mode=OneWay}" />
            <Style x:Key="AppThemeMenuItemStyle" 
                    TargetType="{x:Type MenuItem}" 
                    BasedOn="{StaticResource MetroMenuItem}">
                <Setter Property="Command" 
                         Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Icon" 
                         Value="{StaticResource AppThemeMenuIcon}" />
                <Setter Property="Header" 
                         Value="{Binding Name, Mode=OneWay}" />
            </Style>
            <Style x:Key="AccentColorMenuItemStyle" 
                    TargetType="{x:Type MenuItem}" 
                    BasedOn="{StaticResource MetroMenuItem}">
                <Setter Property="Command" 
                         Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Icon" 
                         Value="{StaticResource AccentMenuIcon}" />
                <Setter Property="Header" 
                         Value="{Binding Name, Mode=OneWay}" />
            </Style>

            <x:ArrayExtension Type="{x:Type Brush}" x:Key="brushes">
                <SolidColorBrush Color="Red"/>
                <SolidColorBrush Color="#339933"/>
                <SolidColorBrush Color="#FF0C3970"/>
                <SolidColorBrush Color="#818183"/>
                <SolidColorBrush Color="#FF8E01"/>
                <SolidColorBrush Color="#FF4040DA"/>
                <SolidColorBrush Color="Yellow"/>
                <SolidColorBrush Color="#FF41B1E1"/>
                <SolidColorBrush Color="Brown"/>
                <SolidColorBrush Color="#9F15C3"/>
                <SolidColorBrush Color="#000033"/>
            </x:ArrayExtension>
            <CollectionViewSource x:Key="costsViewSource" d:DesignSource="{d:DesignInstance {x:Type base:Cost}, CreateList=True}"/>
            <CollectionViewSource x:Key="incomesViewSource" d:DesignSource="{d:DesignInstance {x:Type base:Income}, CreateList=True}"/>
            <Style x:Key="GlassButton" TargetType="{x:Type Button}">

                <Setter Property="SnapsToDevicePixels" Value="True"/>

                <Setter Property="OverridesDefaultStyle" Value="True"/>

                <Setter Property="Template">

                    <Setter.Value>

                        <ControlTemplate TargetType="{x:Type Button}">

                            <Grid>

                                <!--Background Layer-->

                                <Ellipse Fill="{TemplateBinding Background}"/>

                                <!-- Refraction Layer -->

                                <Ellipse x:Name="RefractionLayer">

                                    <Ellipse.Fill>

                                        <RadialGradientBrush GradientOrigin="0.496,1.052">

                                            <RadialGradientBrush.RelativeTransform>

                                                <TransformGroup>

                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>

                                                    <TranslateTransform X="0.02" Y="0.3"/>

                                                </TransformGroup>

                                            </RadialGradientBrush.RelativeTransform>

                                            <GradientStop Offset="1" Color="#00000000"/>

                                            <GradientStop Offset="0.4" Color="#FFFFFFFF"/>

                                        </RadialGradientBrush>

                                    </Ellipse.Fill>

                                </Ellipse>

                                <!-- Reflection Layer -->

                                <Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill">

                                    <Path.RenderTransform>

                                        <ScaleTransform ScaleY="0.5" />

                                    </Path.RenderTransform>

                                    <Path.Data>

                                        <PathGeometry>

                                            <PathFigure IsClosed="True" StartPoint="98.999,45.499">

                                                <BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>

                                                <BezierSegment
                                       IsSmoothJoin="True"
                                       Point1="75.860,47.685"
                                       Point2="69.111,45.196"
                                       Point3="50.167,45.196"/>

                                                <BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>

                                                <BezierSegment
                                       IsSmoothJoin="True"
                                       Point1="7.469,52.580"
                                       Point2="1.000,53.252"
                                       Point3="1.000,44.999"/>

                                                <BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>

                                                <BezierSegment
                                       IsSmoothJoin="True"
                                       Point1="9.106,14.370"
                                       Point2="27.875,0"
                                      Point3="50,0"/>

                                                <BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>

                                                <BezierSegment
                                       IsSmoothJoin="True"
                                       Point1="99.139,39.369"
                                      Point2="98.999,40.084"
                                       Point3="98.999,45.499"/>

                                            </PathFigure>

                                        </PathGeometry>

                                    </Path.Data>

                                    <Path.Fill>
                                        <RadialGradientBrush GradientOrigin="0.498,0.526">

                                            <RadialGradientBrush.RelativeTransform>

                                                <TransformGroup>

                                                    <ScaleTransform
                                            CenterX="0.5"
                                            CenterY="0.5"
                                            ScaleX="1"
                                            ScaleY="1.997"/>

                                                    <TranslateTransform X="0" Y="0.5"/>

                                                </TransformGroup>

                                            </RadialGradientBrush.RelativeTransform>

                                            <GradientStop Offset="1" Color="#FFFFFFFF"/>

                                            <GradientStop Offset="0.85" Color="#92FFFFFF"/>

                                            <GradientStop Offset="0" Color="#00000000"/>

                                        </RadialGradientBrush>

                                    </Path.Fill>
                                </Path>
                                <!-- ContentPresenter -->
                                <ContentPresenter Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="RefractionLayer" Property="Fill">
                                        <Setter.Value>
                                            <RadialGradientBrush GradientOrigin="0.496,1.052">
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform
                                               CenterX="0.5"
                                               CenterY="0.5"
                                               ScaleX="1.5"
                                               ScaleY="1.5"/>

                                                        <TranslateTransform X="0.02" Y="0.3"/>

                                                    </TransformGroup>

                                                </RadialGradientBrush.RelativeTransform>

                                                <GradientStop Offset="1" Color="#00000000"/>

                                                <GradientStop Offset="0.45" Color="#FFFFFFFF"/>

                                            </RadialGradientBrush>

                                        </Setter.Value>

                                    </Setter>

                                    <Setter TargetName="ReflectionLayer" Property="Fill">

                                        <Setter.Value>

                                            <RadialGradientBrush GradientOrigin="0.498,0.526">

                                                <RadialGradientBrush.RelativeTransform>

                                                    <TransformGroup>

                                                        <ScaleTransform
                                              CenterX="0.5"
                                              CenterY="0.5"
                                              ScaleX="1"
                                              ScaleY="1.997"/>

                                                        <TranslateTransform X="0" Y="0.5"/>

                                                    </TransformGroup>

                                                </RadialGradientBrush.RelativeTransform>

                                                <GradientStop Offset="1" Color="#FFFFFFFF"/>

                                                <GradientStop Offset="0.85" Color="#BBFFFFFF"/>

                                                <GradientStop Offset="0" Color="#00000000"/>

                                            </RadialGradientBrush>

                                        </Setter.Value>

                                    </Setter>

                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">

                                    <Setter TargetName="RefractionLayer" Property="Fill">
                                        <Setter.Value>

                                            <RadialGradientBrush GradientOrigin="0.496,1.052">

                                                <RadialGradientBrush.RelativeTransform>

                                                    <TransformGroup>

                                                        <ScaleTransform
                                               CenterX="0.5"
                                               CenterY="0.5"
                                               ScaleX="1.5"
                                               ScaleY="1.5"/>

                                                        <TranslateTransform X="0.02" Y="0.3"/>

                                                    </TransformGroup>

                                                </RadialGradientBrush.RelativeTransform>

                                                <GradientStop Offset="1" Color="#00000000"/>

                                                <GradientStop Offset="0.3" Color="#FFFFFFFF"/>

                                            </RadialGradientBrush>

                                        </Setter.Value>

                                    </Setter>

                                    <Setter TargetName="ReflectionLayer" Property="Fill">

                                        <Setter.Value>

                                            <RadialGradientBrush GradientOrigin="0.498,0.526">

                                                <RadialGradientBrush.RelativeTransform>

                                                    <TransformGroup>

                                                        <ScaleTransform
                                             CenterX="0.5"
                                             CenterY="0.5"
                                             ScaleX="1"
                                             ScaleY="1.997"/>

                                                        <TranslateTransform X="0" Y="0.5"/>

                                                    </TransformGroup>

                                                </RadialGradientBrush.RelativeTransform>

                                                <GradientStop Offset="1" Color="#CCFFFFFF"/>

                                                <GradientStop Offset="0.85" Color="#66FFFFFF"/>

                                                <GradientStop Offset="0" Color="#00000000"/>

                                            </RadialGradientBrush>

                                        </Setter.Value>

                                    </Setter>

                                </Trigger>

                            </ControlTemplate.Triggers>

                        </ControlTemplate>

                    </Setter.Value>

                </Setter>

            </Style>
            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Setter Property="Controls:ButtonHelper.CornerRadius" Value="3"/>
                <Setter Property="MinHeight" Value="25"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Padding" Value="5,6"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Controls:ButtonHelper.PreserveTextCase" Value="False">
                                    <Setter Property="Content" TargetName="contentPresenter" Value="{Binding Content, Converter={Custom:ToUpperConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="Controls:ButtonHelper.PreserveTextCase" Value="True">
                                    <Setter Property="Content" TargetName="contentPresenter" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush8}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush7}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderThickness" TargetName="Border" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
                <Setter Property="MinHeight" Value="26"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="Gray"/>
                <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="Gray"/>
                <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                <Setter Property="ItemContainerStyle" Value="{DynamicResource MetroComboBoxItem}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <Grid.Resources>
                                    <Style x:Key="comboToggleStyle" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Padding" Value="3"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Grid>
                                                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Grid Margin="1">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}"/>
                                                                <ColumnDefinition Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Button x:Name="PART_ClearText" Content="r" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="Marlett" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Style="{DynamicResource ChromelessButtonStyle}">
                                                                <Button.Visibility>
                                                                    <Binding Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                        <Binding.Converter>
                                                                            <BooleanToVisibilityConverter/>
                                                                        </Binding.Converter>
                                                                    </Binding>
                                                                </Button.Visibility>
                                                            </Button>
                                                            <Rectangle x:Name="BtnArrowBackground" Grid.Column="2" Fill="Transparent" StrokeThickness="0"/>
                                                            <Path x:Name="BtnArrow" Grid.Column="2" Data="F1M301.14,-189.041L311.57,-189.041 306.355,-182.942 301.14,-189.041z" Fill="{DynamicResource GrayBrush1}" HorizontalAlignment="Center" Height="4" IsHitTestVisible="False" Stretch="Uniform" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="8"/>
                                                        </Grid>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" SourceName="BtnArrowBackground" Value="True">
                                                            <Setter Property="Fill" TargetName="BtnArrowBackground" Value="{DynamicResource GrayBrush5}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush8}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush7}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused"/>
                                        <VisualState x:Name="Unfocused"/>
                                        <VisualState x:Name="FocusedDropDown">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}"/>
                                        <ColumnDefinition Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}"/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="PART_DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="3" Foreground="{TemplateBinding Foreground}" IsTabStop="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" Style="{DynamicResource comboToggleStyle}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                                    <Border x:Name="EditableTextBoxBorder" CornerRadius="2" BorderBrush="Transparent" BorderThickness="1,1,0,1" Background="{TemplateBinding Background}" Margin="0,0,-2,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed">
                                        <TextBox x:Name="PART_EditableTextBox" BorderThickness="0" Background="{x:Null}" Foreground="{TemplateBinding Foreground}" Focusable="True" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="0,0,0,-2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Controls:TextBoxHelper.Watermark="{TemplateBinding Controls:TextBoxHelper.Watermark}">
                                            <TextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="MinHeight" Value="26"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                <ControlTemplate.Resources>
                                                                    <Storyboard x:Key="enterGotFocus">
                                                                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                    </Storyboard>
                                                                    <Storyboard x:Key="exitGotFocus">
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                    </Storyboard>
                                                                    <Storyboard x:Key="enterHasText">
                                                                        <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                    </Storyboard>
                                                                    <Storyboard x:Key="exitHasText">
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                    </Storyboard>
                                                                </ControlTemplate.Resources>
                                                                <Grid>
                                                                    <Border x:Name="Base" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    <Grid x:Name="PART_InnerGrid" Margin="2">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition x:Name="ButtonColumn" Width="{Binding (Controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition x:Name="ButtonRow" Height="*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                                                                        <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                                                        <TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        <Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
                                                                            <TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                <TextBlock.RenderTransform>
                                                                                    <TranslateTransform/>
                                                                                </TextBlock.RenderTransform>
                                                                            </TextBlock>
                                                                        </Grid>
                                                                        <Button x:Name="PART_ClearText" Content="{Binding (Controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
                                                                            <Button.Visibility>
                                                                                <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                                    <Binding.Converter>
                                                                                        <BooleanToVisibilityConverter/>
                                                                                    </Binding.Converter>
                                                                                </Binding>
                                                                            </Button.Visibility>
                                                                        </Button>
                                                                    </Grid>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                                                        <Setter Property="Visibility" TargetName="Message" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
                                                                        <DataTrigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </DataTrigger.EnterActions>
                                                                        <DataTrigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </DataTrigger.ExitActions>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding (Controls:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
                                                                        <DataTrigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </DataTrigger.EnterActions>
                                                                        <DataTrigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </DataTrigger.ExitActions>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
                                                                        <DataTrigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </DataTrigger.EnterActions>
                                                                        <DataTrigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                        <DoubleAnimation.EasingFunction>
                                                                                            <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                        </DoubleAnimation.EasingFunction>
                                                                                    </DoubleAnimation>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </DataTrigger.ExitActions>
                                                                    </DataTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="TextWrapping" Value="NoWrap"/>
                                                                            <Condition Property="AcceptsReturn" Value="False"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
                                                                    </MultiTrigger>
                                                                    <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                                                                        <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                                                        <Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
                                                                    </DataTrigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="BorderBrush" TargetName="Base" Value="Gray"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsReadOnly" Value="True">
                                                                        <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsFocused" Value="True">
                                                                        <Setter Property="BorderBrush" TargetName="Base" Value="Gray"/>
                                                                        <Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                                                        <Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                                                        <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                                        <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                                                        <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                                        <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
                                                                            <Condition Property="IsFocused" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <MultiTrigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </MultiTrigger.EnterActions>
                                                                        <MultiTrigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </MultiTrigger.ExitActions>
                                                                    </MultiTrigger>
                                                                    <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                                                        <Trigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </Trigger.EnterActions>
                                                                        <Trigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </Trigger.ExitActions>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type TextBox}">
                                                            <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
                                                            <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True"/>
                                                            <Setter Property="Controls:ControlsHelper.ButtonWidth" Value="22"/>
                                                            <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
                                                            <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                                                            <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="MinHeight" Value="26"/>
                                                            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                            <Setter Property="Padding" Value="0"/>
                                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                            <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource GrayBrash8}"/>
                                                            <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                            <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                                                            <Setter Property="CaretBrush" Value="{DynamicResource GrayBrush8}"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                                                        <ControlTemplate.Resources>
                                                                            <Storyboard x:Key="enterGotFocus">
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                            </Storyboard>
                                                                            <Storyboard x:Key="exitGotFocus">
                                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                            </Storyboard>
                                                                            <Storyboard x:Key="enterHasText">
                                                                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                            </Storyboard>
                                                                            <Storyboard x:Key="exitHasText">
                                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                            </Storyboard>
                                                                        </ControlTemplate.Resources>
                                                                        <Grid>
                                                                            <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                            <Grid x:Name="PART_InnerGrid" Margin="2">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                    <ColumnDefinition x:Name="ButtonColumn" Width="{Binding (Controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition x:Name="ButtonRow" Height="*"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                                                                                <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                                                                <TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                <Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
                                                                                    <TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                        <TextBlock.RenderTransform>
                                                                                            <TranslateTransform/>
                                                                                        </TextBlock.RenderTransform>
                                                                                    </TextBlock>
                                                                                </Grid>
                                                                                <Button x:Name="PART_ClearText" Content="{Binding (Controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
                                                                                    <Button.Visibility>
                                                                                        <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                                            <Binding.Converter>
                                                                                                <BooleanToVisibilityConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Button.Visibility>
                                                                                </Button>
                                                                            </Grid>
                                                                            <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                                                                <Setter Property="Visibility" TargetName="Message" Value="Visible"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
                                                                                <DataTrigger.EnterActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </DataTrigger.EnterActions>
                                                                                <DataTrigger.ExitActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </DataTrigger.ExitActions>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
                                                                                <DataTrigger.EnterActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </DataTrigger.EnterActions>
                                                                                <DataTrigger.ExitActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </DataTrigger.ExitActions>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
                                                                                <DataTrigger.EnterActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </DataTrigger.EnterActions>
                                                                                <DataTrigger.ExitActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                                <DoubleAnimation.EasingFunction>
                                                                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                                </DoubleAnimation.EasingFunction>
                                                                                            </DoubleAnimation>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </DataTrigger.ExitActions>
                                                                            </DataTrigger>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="TextWrapping" Value="NoWrap"/>
                                                                                    <Condition Property="AcceptsReturn" Value="False"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
                                                                            </MultiTrigger>
                                                                            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                                                                                <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                                                                <Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
                                                                            </DataTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="Base" Value="Gray"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsReadOnly" Value="True">
                                                                                <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsFocused" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="Base" Value="Gray"/>
                                                                                <Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                                                                <Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                                                                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                                                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                                                                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                                                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                                                            </Trigger>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
                                                                                    <Condition Property="IsFocused" Value="True"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <MultiTrigger.EnterActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </MultiTrigger.EnterActions>
                                                                                <MultiTrigger.ExitActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </MultiTrigger.ExitActions>
                                                                            </MultiTrigger>
                                                                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                                                                <Trigger.EnterActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </Trigger.EnterActions>
                                                                                <Trigger.ExitActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </Trigger.ExitActions>
                                                                            </Trigger>
                                                                            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="True">
                                                                                <Trigger.EnterActions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </Trigger.EnterActions>
                                                                                <Setter Property="Effect" TargetName="Base">
                                                                                    <Setter.Value>
                                                                                        <DropShadowEffect BlurRadius="10" Color="Gray" Opacity="0" ShadowDepth="0"/>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Trigger>
                                                                            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                                                                                <Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </Border>
                                    <Grid x:Name="ContentSite" Margin="7,0,0,0">
                                        <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </Grid>
                                <Border x:Name="FocusBorder" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" Grid.ColumnSpan="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed"/>
                                <Border x:Name="DisabledVisualElement" CornerRadius="5" BorderBrush="Gray" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0.6" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Grid MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border x:Name="PopupBorder" BorderBrush="{DynamicResource ComboBoxPopupBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource WhiteBrush}" Effect="{DynamicResource DropShadowBrush}" HorizontalAlignment="Stretch" Height="Auto"/>
                                        <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="2" Padding="1">
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                                    <Setter Property="Grid.ColumnSpan" TargetName="EditableTextBoxBorder" Value="2"/>
                                    <Setter Property="Grid.ColumnSpan" TargetName="ContentSite" Value="2"/>
                                </DataTrigger>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Visibility" TargetName="EditableTextBoxBorder" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                                    <Setter Property="Focusable" TargetName="PART_DropDownToggle" Value="False"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Visibility" TargetName="FocusBorder" Value="Visible"/>
                                    <Setter Property="BorderBrush" TargetName="FocusBorder" Value="Gray"/>
                                </Trigger>
                                <Trigger Property="IsFocused" SourceName="PART_EditableTextBox" Value="True">
                                    <Setter Property="Visibility" TargetName="FocusBorder" Value="Visible"/>
                                    <Setter Property="BorderBrush" TargetName="FocusBorder" Value="Gray"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Visibility" TargetName="FocusBorder" Value="Visible"/>
                                    <Setter Property="BorderBrush" TargetName="FocusBorder" Value="Gray"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="Visibility" TargetName="FocusBorder" Value="Visible"/>
                                    <Setter Property="BorderBrush" TargetName="FocusBorder" Value="Gray"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="dataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Background" Value="#FF41B1E1" />
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Height" Value="26"/>
                <Setter Property="Padding" Value="5"/>
            </Style>

        </ResourceDictionary>
    </Controls:MetroWindow.Resources>

    <Grid>
        <Grid x:Name="mainGrid">

            <Menu x:Name="MenuSP" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Background="WhiteSmoke">
                <MenuItem Header="File" Width="60" Background="WhiteSmoke" Margin="24,0,0,0">
                    <!--<MenuItem Header="Neue"/>
                    <MenuItem Header="Datei öffnen"/>
                    <MenuItem Header="Sichern unter"/>-->
                    <Separator/>
                    <MenuItem Header="Beenden" Click="MenuExit_Click"/>
                </MenuItem>
                <MenuItem Header="Bearbeiten" Background="WhiteSmoke">
                    <MenuItem x:Name="menuAdd" Header="Hinzufügen" Click="MenuAdd_Click"/>
                    <MenuItem x:Name="menuRename" Header="Umbenennen" Click="MenuRename_Click"/>
                    <MenuItem x:Name="menuDelete" Header="Löschen" Click="MenuDelete_Click"/>
                    <!--<MenuItem x:Name="moveSQLBase" Header="Переместить базу данных" Click="moveSQLBase_Click"/>-->
                    <!--<MenuItem x:Name="convertBase" Header="Конвертировать базу данных" Click="convertBase_Click"/>-->
                </MenuItem>
                <MenuItem Header="Hilfe" Background="WhiteSmoke">
                    <MenuItem Header="About programm" Click="MenuHelpAboutProg_Click"/>
                </MenuItem>

            </Menu>
            <Label x:Name="DateLabel" Content="Datum:" HorizontalAlignment="Left" Margin="566,10,0,0" VerticalAlignment="Top" Width="50"/>
            <Button x:Name="AddCosts" Content="Ausgabe hinzufügen" HorizontalAlignment="Left" Margin="223,86,0,0" VerticalAlignment="Top" Width="140" Click="AddCosts_Click" ToolTip="Bitte klicken Sie auf die Kosten hinzufügen"/>
            <Button x:Name="AddIncome" Content="Einkommen hinzufügen" HorizontalAlignment="Left" Margin="223,86,0,0" VerticalAlignment="Top" Width="140" Click="AddIncome_Click" Visibility="Collapsed" ToolTip="Bitte klicken Sie auf die Einkommen hinzufügen"/>
            <Label x:Name="DateHeute" Content="" HorizontalAlignment="Left" Margin="621,10,0,0" VerticalAlignment="Top" Width="123"/>
            <Label x:Name="lMonat" Content="Monat" HorizontalAlignment="Left" Margin="24,82,0,0" VerticalAlignment="Top" Width="60"/>
            <ComboBox x:Name="monatName" HorizontalAlignment="Left" Margin="80,83,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="monatName_SelectionChanged" Background="WhiteSmoke" Style="{DynamicResource ComboBoxStyle1}" BorderThickness="1" ToolTip="Bitte wählen Sie den Monat">
                <ComboBox.Resources>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Background" Value="WhiteSmoke"/>
                    </Style>
                </ComboBox.Resources>
                <ComboBoxItem Content="Januar"/>
                <ComboBoxItem Content="Februar"/>
                <ComboBoxItem Content="März"/>
                <ComboBoxItem Content="April"/>
                <ComboBoxItem Content="Mai"/>
                <ComboBoxItem Content="Juni"/>
                <ComboBoxItem Content="Juli"/>
                <ComboBoxItem Content="August"/>
                <ComboBoxItem Content="September"/>
                <ComboBoxItem Content="Октябрь"/>
                <ComboBoxItem Content="November"/>
                <ComboBoxItem Content="Dezember"/>
            </ComboBox>
            <Grid DataContext="{StaticResource costsViewSource}" xml:lang="de-DE">
                <DataGrid x:Name="dataGridCosts" ItemsSource="{Binding}" IsReadOnly="True" IsSynchronizedWithCurrentItem="True" HeadersVisibility="Column" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="300" Width="340" Margin="24,117,0,0" AutoGenerateColumns="False">
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem x:Name="menuContextCostAdd" Header="Hinzufühgen" Click="AddCosts_Click"/>
                            <MenuItem x:Name="menuContextCostDelete"  Header="Löschen" Click="DeleteCosts_Click"/>
                            <MenuItem x:Name="menuContextCostRename"  Header="Umbenennen" Click="RenameCosts_Click"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="#FF41B1E1" />
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Height" Value="26"/>
                            <Setter Property="Padding" Value="5"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name Ausgabe" Binding="{Binding NameOfCost}" Width="150"/>
                        <DataGridTextColumn Header="Preis" Binding="{Binding PreisOfCost, StringFormat={}{0:C}}" Width="70"/>
                        <DataGridTextColumn Header="Datum" Binding="{Binding DateOfCost, StringFormat=dd.MM.yyyy}" Width="80"/>
                        <!--Кнопка удаления-->
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Menu Padding="0" Margin="0" Background="#19119EDA">
                                        <MenuItem Header=". . ." Background="#00119EDA" Width="20" Height="16" Padding="2,-6,0,0" Margin="0" HorizontalContentAlignment="Center">
                                            <MenuItem Header="Hinzufühgen" Click="MenuAdd_Click"/>
                                            <MenuItem Header="Umbenennen" Click="MenuRename_Click"/>
                                            <MenuItem Header="Löschen" Click="MenuDelete_Click"/>
                                        </MenuItem>
                                    </Menu>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Grid DataContext="{StaticResource incomesViewSource}" xml:lang="de-DE">
                <DataGrid x:Name="dataGridIncomes" ItemsSource="{Binding}" IsReadOnly="True" IsSynchronizedWithCurrentItem="True" HeadersVisibility="Column"  HorizontalAlignment="Left" Margin="24,117,0,0" VerticalAlignment="Top" Height="300" Width="340" AutoGenerateColumns="False" Visibility="Collapsed">
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem x:Name="menuContextIncomeAdd" Header="Hinzufühgen" Click="AddIncome_Click"/>
                            <MenuItem x:Name="menuContextIncomeDelete" Header="Löschen" Click="DeleteIncomes_Click"/>
                            <MenuItem x:Name="menuContextIncomeRename" Header="Umbenennen" Click="RenameIncomes_Click"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>

                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="#FF41B1E1" />
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Height" Value="26"/>
                            <Setter Property="Padding" Value="5"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name Einkommen" Binding="{Binding NameOfIncome}" Width="150"/>
                        <DataGridTextColumn Header="Preis" Binding="{Binding PreisOfIncome, StringFormat={}{0:C}}" Width="70"/>
                        <DataGridTextColumn Header="Datum" Binding="{Binding DateOfIncome, StringFormat=dd.MM.yyyy}" Width="80"/>
                        <!--Кнопка удаления-->
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Menu Padding="0" Margin="0" Background="#19119EDA">
                                        <MenuItem Header=". . ." Background="#00119EDA" Width="20" Height="16" Padding="2,-6,0,0" Margin="0" HorizontalContentAlignment="Center">
                                            <MenuItem Header="Hinzufühgen" Click="MenuAdd_Click"/>
                                            <MenuItem Header="Umbenennen" Click="MenuRename_Click"/>
                                            <MenuItem Header="Löschen" Click="MenuDelete_Click"/>
                                        </MenuItem>
                                    </Menu>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Label Content="Balance für Monat" HorizontalAlignment="Left" Margin="24,552,0,0" VerticalAlignment="Top" Width="110"/>
            <Label x:Name="labelBalance" Content="0" HorizontalAlignment="Left" Margin="159,552,0,0" VerticalAlignment="Top" Width="95" FontWeight="Bold"/>

            <TextBlock x:Name="txtBlCosts" HorizontalAlignment="Left" Margin="24,431,0,0" TextWrapping="Wrap" Text="Ganze Ausgaben für Monat:" VerticalAlignment="Top" Height="26" Width="200"/>
            <TextBlock x:Name="textBlockCost" HorizontalAlignment="Left" Margin="230,431,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="26" Width="90"/>
            <TextBlock x:Name="txtBlIncome" HorizontalAlignment="Left" Margin="24,431,0,0" TextWrapping="Wrap" Text="Ganze Einkommen für Monat:" VerticalAlignment="Top" Height="26" Width="200" Visibility="Collapsed"/>
            <TextBlock x:Name="textBlockIncome" HorizontalAlignment="Left" Margin="230,431,0,0" TextWrapping="Wrap" Text="{Binding StringFormat={}{0:C}}" VerticalAlignment="Top" Height="26" Width="90" Visibility="Collapsed"/>

            <Label x:Name="lblChange" Content="Einkommen/Ausgaben" HorizontalAlignment="Left" Margin="24,45,0,0" VerticalAlignment="Top" Width="134"/>
            <Button x:Name="button" HorizontalAlignment="Left" Margin="174,45,0,0" VerticalAlignment="Top" Width="26" Height="26" BorderThickness="0" Padding="0" Background="#FF41B1E1" BorderBrush="Transparent" Foreground="#FF41B1E1" ToolTip="Bitte klicken Sie um Einkommen/Ausgaben zu ändern" Style="{DynamicResource ButtonStyle1}" Click="ChangeIncomeCost_Click">
                <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_scale_unbalanced" Width="18" Height="18" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                    <Path Width="18" Height="18" Stretch="Fill" Fill="#FFF9F9F9" Data="F1 M 38.7916,15.8334C 40.5405,15.8334 40.375,17.2511 40.375,19L 40.4832,22.422L 58.8399,27.5931L 58.0738,30.6657L 56.0774,30.168L 64.9166,47.5C 64.9166,50.5606 59.8717,53.0417 54.625,53.0417C 49.3783,53.0417 44.3333,50.5606 44.3333,47.5L 52.3887,29.2483L 40.6112,26.3118L 41.5394,53.9324C 47.6545,54.3801 52.25,56.2923 52.25,58.5833L 25.3333,58.5833C 25.3333,56.2923 29.9288,54.3801 36.0439,53.9324L 37.1289,25.4436L 23.8151,22.1241L 31.6666,40.375C 31.6666,43.4356 26.6217,45.9167 21.375,45.9167C 16.1283,45.9167 11.0833,43.4356 11.0833,40.375L 20.1264,21.2044L 18.13,20.7066L 18.8961,17.634L 37.2057,22.0007L 37.2083,19C 37.2083,17.2511 37.0427,15.8334 38.7916,15.8334 Z M 61.2191,47.5L 55.4166,33.1384L 55.4166,47.5L 61.2191,47.5 Z M 48.0308,47.5L 53.8333,47.5L 53.8333,33.1384L 48.0308,47.5 Z M 27.9691,40.3751L 22.1666,26.0135L 22.1666,40.3751L 27.9691,40.3751 Z M 14.7808,40.3751L 20.5833,40.3751L 20.5833,26.0134L 14.7808,40.3751 Z "/>
                </Canvas>
            </Button>

            <GroupBox x:Name="groupBox" Header="Statistik" HorizontalAlignment="Left" Margin="383,86,0,0" VerticalAlignment="Top" Height="390" Width="600">

                <Controls:FlipView x:Name="flipView" IsBannerEnabled="False" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" SelectedIndex="0" Margin="0,0,0,0" MouseOverGlowEnabled="False"  Background="#FF41B1E1">
                    <Controls:FlipView.Items>
                        <Grid x:Name="gridGroup0">
                            <StackPanel>
                                <c:PieChartLayout HorizontalAlignment="Center" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top"
                              PlottedProperty="Category" Margin="10,0,10,10" Width="435" Height="310" FontSize="12">
                                    <c:PieChartLayout.ColorSelector>
                                        <c:IndexedColourSelector Brushes="{StaticResource brushes}"/>
                                    </c:PieChartLayout.ColorSelector>
                                </c:PieChartLayout>
                            </StackPanel>
                        </Grid>
                        <Grid x:Name="gridGroup1">
                            <StackPanel>
                                <c:PieChartLayout HorizontalAlignment="Center" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top"
                              PlottedProperty="Category" Margin="10,0,10,10" Width="435" Height="310" FontSize="12">
                                    <c:PieChartLayout.ColorSelector>
                                        <c:IndexedColourSelector Brushes="{StaticResource brushes}"/>
                                    </c:PieChartLayout.ColorSelector>
                                </c:PieChartLayout>
                            </StackPanel>
                        </Grid>
                        <Grid x:Name="gridGroup2">
                            <StackPanel>
                                <c:PieChartLayout HorizontalAlignment="Center" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top"
                               PlottedProperty="Category" Margin="10,0,10,10" Width="435" Height="310" FontSize="12">
                                    <c:PieChartLayout.ColorSelector>
                                        <c:IndexedColourSelector Brushes="{StaticResource brushes}"/>
                                    </c:PieChartLayout.ColorSelector>
                                </c:PieChartLayout>
                            </StackPanel>
                        </Grid>
                    </Controls:FlipView.Items>
                </Controls:FlipView>
            </GroupBox>
        </Grid>
        <Controls:ProgressRing x:Name="metroProgres" HorizontalAlignment="Left" Margin="416,257,0,0" VerticalAlignment="Top" Width="50" Height="70" Foreground="Red" Visibility="Collapsed"/>

    </Grid>
</Controls:MetroWindow>













<!--<Controls:MetroWindow x:Class="BalanceSheet.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BalanceSheet"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:g="clr-namespace:BalanceSheet.VerificationPass"
        mc:Ignorable="d"
        Height="300" Width="330" EnableDWMDropShadow="True" ShowTitleBar="False"
        ResizeMode="NoResize" WindowTransitionsEnabled="False" WindowStartupLocation="CenterScreen"
        Topmost="True" ShowInTaskbar="False" WindowStyle="None" Loaded="MetroWindow_Loaded">
    <Window.DataContext>
        <g:LoginPasswordValidation/>
    </Window.DataContext>
    <StackPanel>
        <StackPanel Height="70" Width="330" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
            <StackPanel x:Name="stack_app_check" Width="16" Height="16" Margin="20,0,0,0" Visibility="Collapsed">
                <Canvas Width="16" Height="16" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                    <Path Width="16" Height="16" Stretch="Fill" 
                      Data="F1 M 23.7501,33.25L 34.8334,44.3333L 52.2499,22.1668L 56.9999,26.9168L 34.8334,53.8333L 19.0001,38L 23.7501,33.25 Z " 
                      Fill="#FF09B209" StrokeThickness="0"/>
                </Canvas>
            </StackPanel>
            <StackPanel x:Name="stack_app_noentry" Width="16" Height="16" Margin="20,0,0,0" Visibility="Collapsed">
                <Canvas Width="16" Height="16" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                    <Path Width="16" Height="16" Stretch="Fill"  
                      Data="F1 M 38,19C 48.4934,19 57,27.5066 57,38C 57,48.4934 48.4934,57 38,57C 27.5066,57 19,48.4934 19,38C 19,27.5066 27.5066,19 38,19 Z M 23.75,34.8334L 23.75,41.1667L 52.25,41.1667L 52.25,34.8334L 23.75,34.8334 Z " 
                      Fill="Red"/>
                </Canvas>
            </StackPanel>
            <StackPanel x:Name="stack_load_ring" Width="20" Height="20" Margin="20,0,0,0" Visibility="Collapsed">
                <Controls:ProgressRing x:Name="progring" Foreground="#FF007ACC" Height="15" Width="15" IsActive="True" />
            </StackPanel>
            <StackPanel Width="257" Height="50" Margin="10">
                <Label Content="{Binding (Validation.Errors)[0].ErrorContent}" x:Name="lblError" Width="257" Height="50" 
                   VerticalAlignment="Bottom" HorizontalAlignment="Left" HorizontalContentAlignment="Left" 
                   VerticalContentAlignment="Center" Foreground="Red"/>
            </StackPanel>
        </StackPanel>
        <StackPanel Width="330" Height="140">
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="134"/>
                    <ColumnDefinition Width="134"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <TextBox Grid.Column="1" Grid.Row="0" Controls:TextBoxHelper.Watermark="Пользователь" 
                         Validation.Error="TextBox_Error"
                         Controls:TextBoxHelper.ClearTextButton="True"  
                         x:Name="loginTextB" HorizontalAlignment="Left" Height="26"  
                         TextWrapping="Wrap" VerticalAlignment="Center" Width="140" MaxLines="5" MaxLength="10" 
                         ToolTip="Введите пожалуйста имя пользователя" Margin="5,7,-28,7">
                    <Binding Path="UserLogin" ValidatesOnExceptions="True" ValidatesOnNotifyDataErrors="True" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <g:LoginPasswordValidation/>
                        </Binding.ValidationRules>
                    </Binding>

                </TextBox>
                <TextBox Grid.Column="1" Grid.Row="1" Controls:TextBoxHelper.Watermark="Пароль"
                         Controls:TextBoxHelper.ClearTextButton="True" 
                         x:Name="passTextB" HorizontalAlignment="Left" Height="26"  
                         TextWrapping="Wrap" VerticalAlignment="Center" Width="140" 
                         ToolTip="Введите пожалуйста пароль" Margin="5,7,-28,7">
                    <Binding Path="UserPassword" UpdateSourceTrigger="LostFocus" ValidatesOnExceptions="True" ValidatesOnNotifyDataErrors="True" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <g:LoginPasswordValidation/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <Label Content="Имя пользователя:" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="5" Width="120" Height="26"/>
                <Label Grid.Row="1" Content="Пароль:" HorizontalAlignment="Left" VerticalAlignment="Center" Width="120" Height="26" Margin="5"/>
                <Controls:DropDownButton Grid.Row="2" x:Name="Login" Content="Войти" HorizontalAlignment="Left" VerticalAlignment="Center" Width="120" Click="Login_Click" Height="26" Margin="5,7,8,7"/>
                <Controls:DropDownButton Grid.Column="1" Grid.Row="2" x:Name="Registr" Content="Регистрация" HorizontalAlignment="Left" VerticalAlignment="Center" Width="140" Click="Registr_Click" Height="26" Margin="5,7,-26,7"/>
            </Grid>
        </StackPanel>
        <StackPanel>
            <Controls:DropDownButton x:Name="Closes" Content="Выход" HorizontalAlignment="Center" VerticalAlignment="Top" Width="110" Click="Close_Click" Height="26"/>
        </StackPanel>
    </StackPanel>
</Controls:MetroWindow>-->
